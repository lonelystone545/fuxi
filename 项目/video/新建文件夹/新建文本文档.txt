package com.html;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

/**
 * java的jsoup开发搜索引擎爬虫
 * @author wy
 *
 */
public class HtmlJsoup {
	
	/**
	 * 根据url和编码集获取网页源代码
	 * @param url
	 * @param encoding
	 * @return
	 */
	public static String getHtmlResourcesByURL(String url,String encoding) {
		
		//存储源代码的容器
		StringBuffer buffer = new StringBuffer();
		URL urlObj = null;
		URLConnection uc = null;
		InputStreamReader in = null;
		try {
			//建立网络连接
			urlObj = new URL(url);
			//打开网络连接
			uc = urlObj.openConnection();
			//建立网络输入流
			in = new InputStreamReader(uc.getInputStream(),encoding);
			// 缓冲写入的文件流
			BufferedReader reader = new BufferedReader(in);
			//临时变量
			String line =null;
			//循环读取文件流
			while((line=reader.readLine())!=null) {
				buffer.append(line+"\n");//不断追加数据
			}
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("连接超时。。。。。。。。");
		} finally {
			if(in !=null) {
				try {
					in.close();
				} catch(IOException e) {
					e.printStackTrace();
				}
			}
		}
		
		return buffer.toString();
	}
	
	/**
	 * 根据图片的地址批量下载到服务器磁盘中
	 * @param imgURL
	 * @param filePath
	 */
	public static void downImages(String imgURL,String filePath) {
		String fileName = imgURL.substring(imgURL.lastIndexOf("/"));
		//创建文件的目录
		File files = new File(filePath);
		//判断文件夹是否存在
		if(!files.exists()) {
			files.mkdirs();
		}
		//获取图片文件的下载地址
		try {
			URL url = new URL(imgURL);
			//连接网络图片地址
			HttpURLConnection uc = (HttpURLConnection) url.openConnection();
			//获取链接的输出流
			InputStream is = uc.getInputStream();
			
			//创建图片文件
			File file = new File(filePath+fileName);
			//创建输出流
			FileOutputStream out = new FileOutputStream(file);
			int i = 0;
			while((i=is.read())!=-1) {
				out.write(i);
			}
			is.close();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
 	}
	
	public static void main(String[] args) {
		
		//根据网址和页面编码集获取源代码
		String htmlResources = getHtmlResourcesByURL("http://www.iqiyi.com/live/","utf-8");
//		System.out.println(htmlResources);
		//解析源代码
		Document document = Jsoup.parse(htmlResources);
		//获取图片 获取标签
		//网页标签<img src="" alt="" width="" height=""/>
		Elements elements = document.getElementsByTag("img");
		for(Element element : elements) {
			String imgSrc = element.attr("src");//获取图片的内容
//			String imgPath = "http://www.yingdou.net/"+imgSrc;
			System.out.println("正在下载的图片地址: "+imgSrc); //有时候需要拼接 有时候不需要 看具体url
//			System.out.println("绝对地址"+"http://live.youku.com/?spm=a2hww.20023042.topNav.5~1~3!8~A"+imgSrc);
			downImages(imgSrc, "F:\\images");
			System.out.println("图片下载成功----------");
			
		}
		//解析我们需要下载的内容部分
		
	}
}
